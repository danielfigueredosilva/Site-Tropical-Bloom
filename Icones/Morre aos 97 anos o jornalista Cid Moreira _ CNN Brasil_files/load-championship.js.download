function loadChampionship(event)
{
  const championshipGroup = event.closest('.fm-tournaments_group');
  const idChampionship    = championshipGroup.querySelector('select')?.value ?? 0;
  const idRadar           = getIdRadar(championshipGroup.querySelectorAll('.fm-tournaments_sportradar .fm-option input'));

  handlerChampionship(`load/${idChampionship}/${idRadar}`);
  setTimeout(() =>{
    progressBar(idChampionship, championshipGroup)
  }, 5000);
}

async function handlerChampionship(patch)
{
  return await fetch(`${location.origin}/wp-json/cnnbr/matches/v1/${patch}`)
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(data => {
    return data;
  })
  .catch(error => {
    console.error('There was a problem with the fetch operation:', error);
  });

}

function getIdRadar(inputs)
{
  let idRadar = 0;

  for (var i = 0; i < inputs.length; i++) {
    if (inputs[i].checked) {
        idRadar = inputs[i].value;
        break;
    }
  }

  return idRadar;
}

function progressBar(idChampionship, championshipGroup)
{
  let spamHTML = "";
  const progressBar = championshipGroup.querySelector("#progressbar_soccer");

  if (idChampionship === "") {
    return;
  }
  
  if (null === championshipGroup.querySelector(".progressbar-count")) {
    spamHTML = '<span class="progressbar-count">0/0</span>';
    progressBar.insertAdjacentHTML('afterend', spamHTML);
  }

  const interval = setInterval(async () => {
    
    let progressValue = await handlerChampionship(`progressbar/${idChampionship}/`);
  
    if (progressValue === undefined || progressValue === false) {
      return;
    }

    disabledAndEnableBtn(true);
    progressValue = progressValue[0];

    const max = progressValue.max ?? 0;
    const progress = progressValue.progress ?? 0;

    championshipGroup.querySelector('.progressbar-count').textContent = progress+"/"+max;
    
    progressBar.value = progressValue?.progress;
    progressBar.max   = progressValue?.max;

    if (progressValue?.progress >= progressValue?.max) {
      
      clearInterval(interval);
      
      setTimeout(() => {
        championshipGroup.querySelector('.progressbar-count').textContent = 'Finalizando sincronia de jogos...';
      }, 1000);

      setTimeout(() => {
        progressBar.value = 0;
        progressBar.max   = 0;
        championshipGroup.querySelector('.progressbar-count').textContent = '0/0';
        disabledAndEnableBtn(false);
       
      }, 5000);
      return;
    }

  }, 1000);
}

function disabledAndEnableBtn(isBtn) {
  document.querySelectorAll('.fm-loaded-championship button').forEach(button => {
    button.disabled = isBtn;
  });
}

document.addEventListener('DOMContentLoaded',() => {
  document.querySelectorAll('.fm-tournaments_group').forEach(group => {
    const idChampionship    = group.querySelector('select')?.value ?? 0;
    progressBar(idChampionship, group);
  });
});